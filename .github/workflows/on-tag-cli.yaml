name: release-cli
on:
  push:
    tags:
    - 'v[0-9]+.[0-9]+.[0-9]+'  # Only build tag with semantic versioning format

permissions:
  contents: read

jobs:

  test:
    uses: ./.github/workflows/test.yaml
    permissions:
      contents: read
      security-events: write
    with:
      go-version: ^1.20.4
      scan-severity: 'CRITICAL,HIGH,MEDIUM'

  release:
    outputs:
      hashes: ${{ steps.checksum.outputs.hashes }}
    runs-on: ubuntu-latest
    needs:
    - test
    permissions:
      contents: write
    steps:
    - name: Setup Go
      uses: actions/setup-go@4d34df0c2316fe8122ab82dc22947d607c0c91f9  # v4.0.0
      with:
        go-version: ^1.20.4
    - run: go version
    - name: Cache Go Modules
      uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8  # v3.3.1
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Checkout Code
      uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab  # v3.5.2
    - name: Prune Git History
      run: git fetch --prune --unshallow
    - name: Install Syft
      uses: anchore/sbom-action/download-syft@422cb34a0f8b599678c41b21163ea6088edb2624  # v0.14.1
      with:
        version: v0.13.1
    - name: Build CLI
      uses: goreleaser/goreleaser-action@f82d6c1c344bcacabba2c841718984797f664a6b  # v4.2.0
      id: releaser
      with:
        distribution: goreleaser
        version: latest
        args: release --clean
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        HOMEBREW_TAP_GITHUB_TOKEN: ${{ secrets.HOMEBREW_TAP_GITHUB_TOKEN }}
    - name: Gen Hashes
      id: checksum
      env:
        ARTIFACTS: "${{ steps.releaser.outputs.artifacts }}"
      run: |
        set -euo pipefail
        checksum_file=$(echo "$ARTIFACTS" | jq -r '.[] | select (.type=="Checksum") | .path')
        echo "hashes=$(cat $checksum_file | base64 -w0)" >> $GITHUB_OUTPUT

  provenance:
    needs:
    - release
    permissions:
      actions: read    # To read the workflow path.
      id-token: write  # To sign the provenance.
      contents: write  # To add assets to a release.
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v1.5.0
    with:
      base64-subjects: "${{ needs.release.outputs.hashes }}"
      upload-assets: true
      compile-generator: true

  verify:
    env:
      ATT_FILE_NAME: "multiple.intoto.jsonl"
    needs:
    - release
    - provenance
    runs-on: ubuntu-latest
    permissions: read-all
    steps:
      - name: Install SLSA Verifier
        uses: slsa-framework/slsa-verifier/actions/installer@623cf20a23f3360549eafac6efe1a158960f15f9  # v2.2.0
      - name: Download Assets
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          gh -R "$GITHUB_REPOSITORY" release download "$GITHUB_REF_NAME" -p "vimp*"
          gh -R "$GITHUB_REPOSITORY" release download "$GITHUB_REF_NAME" -p "$ATT_FILE_NAME"
      - name: Verify Assets
        env:
          CHECKSUMS: ${{ needs.release.outputs.hashes }}
        run: |
          set -euo pipefail
          checksums=$(echo "$CHECKSUMS" | base64 -d)
          while read -r line; do
              artifact=$(echo $line | cut -d ' ' -f2)
              slsa-verifier verify-artifact --provenance-path "$ATT_FILE_NAME" \
                                            --source-uri "github.com/$GITHUB_REPOSITORY" \
                                            --source-tag "$GITHUB_REF_NAME" \
                                            "$artifact"
          done <<<"$checksums"